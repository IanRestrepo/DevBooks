---
import { getCollection, render } from "astro:content";
import { SHOW_BUY_BUTTON } from "astro:env/server";
import Layout from "@layouts/Layout.astro";
import AmazonLogo from "@components/AmazonLogo.astro";
import BookScore from "@components/BookScore.astro";

export async function getStaticPaths() {
  const books = await getCollection("books");

  return books.map((book) => ({
    params: { id: book.slug },
    props: { book }
  }))
}

const { book } = Astro.props
const { data, slug } = book
const { title, author, img, readtime, description, buy } = data

const { Content } = await render(book)
export const prerender = true;
---

<Layout title=`Dev Books | ${title}`>
  <div class="flex gap-12">
    <aside class="flex flex-col items-center gap-4">
        <a href="/" class="hover:underline opacity-70">⬅️ Volver al inicio</a>
        <img class="rounded w-72 h-auto" src={`/${img}`} transition:name={`img-${slug}`} alt={title}>
        
        <BookScore server:defer id={slug}>
            <span slot="fallback" class="text-xs opacity-70">Cargando puntuacion...</span>
        <BookScore/>
        {
            SHOW_BUY_BUTTON && (
                <a 
                href={buy.spain}
                title="Comprar Libro"
                target="_blank"
                rel="noopener noreferrer"
                class="text-balance inline-flex gap-2 items-center bg-yellow-400 hover:bg-yellow-500 active:bg-yellow-600 text-black font-bold py-2 px-4 rounded-lg border border-yellow-500 transition duration-200 ease-in-out hover:scale-105 justify-center text-center"
                >
                    Comprar en Amazon España
                    <AmazonLogo />
                </a>
            )
        }
    </aside>

    <main class="max-w-3xl">
        <h1 class="text-4xl font-bold mb-4" transition:name={`title-${slug}`}>{ title }</h1>
        <div class="prose prose-invert">
            <Content />
        </div>
    </main>
  </div>
</Layout>

<script>
    import { SCORE_API_ENDPOINT } from "astro:env/server";
    
    const scoreElement = document.querySelector("#score");

    fetch(SCORE_API_ENDPOINT)
        .then(res => res.text())
        .then(scoreValue => {
            if(scoreElement){
                scoreElement.innerHTML = `⭐ Puntuacion: ${scoreValue.trim()}/5`
            }
        })
</script>